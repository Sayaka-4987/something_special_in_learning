#include<stdio.h>
#define N 100
/*5. 设有如下学生结构：
typedef struct{
  char szName[20];//姓名
  double dScore[2]; //两门课的成绩
}STUDENT;
设班里有一批学生成绩如下(以下是测试样例，可以有多名学生)：
3
LiMing 97 51
WangTao 71 85
ZhaoLi 45 71
输入包含两行：
第一行是一个整数nLen（0 < nLen <= 10）, nLen个学生。
第二行至nLen +1行是nLen个学生的记录: 姓名 分数，每个学生占一行，姓名与分数之间用一个空格隔开。
请编写如下函数：int FailNum(STUDENT *pStu, int nLen)求该班至少有一门课不及格的人数，
nLen为班级人数，FailNum函数返回不及格的人数。在主程序中测试。*/ 
typedef struct{
  char szName[20];//学生姓名
  double dScore[3]; //两门课的成绩+平均分 
}STUDENT;


int FailNum(STUDENT *pStu, int nLen)
{
	int i;
	int flag=0;
    for(i=0;i<nLen;i++,pStu++)	
	{
		if((pStu->dScore[0]<60.0)||(pStu->dScore[1]<60.0)) flag++;
	}
	return flag;
}

STUDENT AverageNumAndRanking(STUDENT *pStu, int nLen)
{
	STUDENT *pStu0=pStu;//储存指针初始位置 
	STUDENT tem;
	int i,j,k; 
	
    for(i=0;i<nLen;i++)
      (pStu+i)->dScore[2]=((pStu+i)->dScore[0]+(pStu+i)->dScore[1])/2.0;
      
    //按平均分为学生排名（选择排序法 
    
    pStu=pStu0;//指针回到原位 
	for(i=0;i<nLen-1;i++)
	{
		k=i;
		for(j=i+1;j<nLen;j++) 
		{if( ((pStu+j)->dScore[2]) > ((pStu+k)->dScore[2]) )  k=j; }
		if(k!=i) {tem=*(pStu+i); *(pStu+i)=*(pStu+k); *(pStu+k)=tem;} 
    }
	
    return *pStu;
 } 

int main()
{
	int nLen,i;
	STUDENT studentA[N];
	scanf("%d",&nLen);
	for(i=0;i<nLen;i++)
	{scanf("%s %lf %lf",&studentA[i].szName,&studentA[i].dScore[0],&studentA[i].dScore[1]);}
	printf("输入的数据为\n");
	for(i=0;i<nLen;i++)
	{printf("%s %lf %lf\n",studentA[i].szName,studentA[i].dScore[0],studentA[i].dScore[1]);}
	printf("不及格人数=%d \n",FailNum(studentA,nLen));
	AverageNumAndRanking(studentA,nLen);
	printf("排序后，学生的两科平均分排名为\n");
	for(i=0;i<nLen;i++)
	{printf("%s %lf\n",studentA[i].szName,studentA[i].dScore[2]);}
	return 0;
}
